# TTCL: The Template Clustering Library
# Copyright (C) 2012  Edgar Gonz√†lez i Pellicer
#
# This file is part of TTCL.
#
# TTCL is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.

nobase_include_HEADERS = \
	ttcl/_c++11.hxx \
	ttcl/assert.hxx \
	ttcl/c++11.hxx \
	ttcl/exception.hxx \
	ttcl/forward.hxx \
	ttcl/global.hxx \
	ttcl/options.hxx \
	ttcl/sys_exception.hxx \
	ttcl/types.hxx \
	\
	ttcl/cl/adaptable_data_model.hxx \
	ttcl/cl/adaptable_data_modeler.hxx \
	ttcl/cl/adaptable_data_umodeler.hxx \
	ttcl/cl/data_clusterer.hxx \
	ttcl/cl/data_model.hxx \
	ttcl/cl/data_modeler.hxx \
	ttcl/cl/data_scorer.hxx \
	ttcl/cl/data_uclusterer.hxx \
	ttcl/cl/data_umodeler.hxx \
	ttcl/cl/distance_clusterer.hxx \
	ttcl/cl/hard_clustering.hxx \
	ttcl/cl/hard_data_clusterer.hxx \
	ttcl/cl/hard_data_model.hxx \
	ttcl/cl/hard_data_modeler.hxx \
	ttcl/cl/hard_data_uclusterer.hxx \
	ttcl/cl/hard_data_umodeler.hxx \
	ttcl/cl/hard_distance_matrix_clusterer.hxx \
	ttcl/cl/hard_matrix_clusterer.hxx \
	ttcl/cl/hard_matrix_uclusterer.hxx \
	ttcl/cl/hier_data_clusterer.hxx \
	ttcl/cl/hier_distance_matrix_clusterer.hxx \
	ttcl/cl/hier_matrix_clusterer.hxx \
	ttcl/cl/matrix_clusterer.hxx \
	ttcl/cl/matrix_uclusterer.hxx \
	ttcl/cl/options.hxx \
	ttcl/cl/soft_clustering.hxx \
	ttcl/cl/soft_data_clusterer.hxx \
	ttcl/cl/soft_data_model.hxx \
	ttcl/cl/soft_data_modeler.hxx \
	ttcl/cl/soft_data_uclusterer.hxx \
	ttcl/cl/soft_data_umodeler.hxx \
	ttcl/cl/soft_distance_matrix_clusterer.hxx \
	ttcl/cl/soft_matrix_clusterer.hxx \
	ttcl/cl/soft_matrix_uclusterer.hxx \
	\
	ttcl/cl/wr/data_clusterer_w.hxx \
	ttcl/cl/wr/data_model_w.hxx \
	ttcl/cl/wr/data_modeler_w.hxx \
	ttcl/cl/wr/data_uclusterer_w.hxx \
	ttcl/cl/wr/hier_data_clusterer_w.hxx \
	ttcl/cl/wr/hier_matrix_clusterer_w.hxx \
	ttcl/cl/wr/matrix_clusterer_w.hxx \
	ttcl/cl/wr/matrix_uclusterer_w.hxx \
	\
	ttcl/co/_dense_forwarder.hxx \
	ttcl/co/_matrix_forwarder.hxx \
	ttcl/co/_sparse_forwarder.hxx \
	ttcl/co/_square_matrix.hxx \
	ttcl/co/_square_matrix_iterator.hxx \
	ttcl/co/_square_matrix_reverse_iterator.hxx \
	ttcl/co/_square_matrix_row_iterator.hxx \
	ttcl/co/_square_matrix_row_ref.hxx \
	ttcl/co/binary_matrix.hxx \
	ttcl/co/boost_matrix.hxx \
	ttcl/co/default_pair.hxx \
	ttcl/co/fake_pair.hxx \
	ttcl/co/fortran_matrix.hxx \
	ttcl/co/full_symmetric_matrix.hxx \
	ttcl/co/hollow_symmetric_matrix.hxx \
	ttcl/co/matrix.hxx \
	ttcl/co/sparse_matrix.hxx \
	ttcl/co/traits.hxx \
	ttcl/co/vecvec_matrix.hxx \
	\
	ttcl/dt/matrix_data.hxx \
	ttcl/dt/traits.hxx \
	\
	ttcl/dt/wr/data_w.hxx \
	ttcl/dt/wr/feature_data_w.hxx \
	ttcl/dt/wr/matrix_w.hxx \
	\
	ttcl/fn/cross_apply.hxx \
	ttcl/fn/gaussian_kernel.hxx \
	ttcl/fn/kernel_distance.hxx \
	ttcl/fn/linear_kernel.hxx \
	ttcl/fn/squared_euclidean_distance.hxx \
	ttcl/fn/squared_mahalanobis_distance.hxx \
	ttcl/fn/traits.hxx \
	\
	ttcl/io/_binstream.hxx \
	ttcl/io/_bzstream.hxx \
	ttcl/io/_gzstream.hxx \
	ttcl/io/ianystream.hxx \
	ttcl/io/ibinstream.hxx \
	ttcl/io/ibzstream.hxx \
	ttcl/io/igzstream.hxx \
	ttcl/io/oanystream.hxx \
	ttcl/io/obinstream.hxx \
	ttcl/io/obzstream.hxx \
	ttcl/io/ogzstream.hxx \
	\
	ttcl/mf/coalesce.hxx \
	ttcl/mf/has_field.hxx \
	ttcl/mf/has_type.hxx \
	ttcl/mf/maximum_common_type.hxx \
	ttcl/mf/metaclass_of.hxx \
	ttcl/mf/traits.hxx \
	ttcl/mf/voidify.hxx \
	\
	ttcl/tu/choices.hxx \
	ttcl/tu/tuning.hxx \
	\
	ttcl/ut/c_escape.hxx \
	ttcl/ut/demangle.hxx \
	ttcl/ut/indexed_compare.hxx \
	ttcl/ut/math.hxx \
	ttcl/ut/reentrant_random.hxx \
	ttcl/ut/singleton.hxx \
	ttcl/ut/std_clock.hxx \
	ttcl/ut/std_random.hxx \
	\
	ttcl/wr/interface_wrap.hxx \
	ttcl/wr/shared_ptr.hxx \
	ttcl/wr/shared_referee.hxx \
	ttcl/wr/typed_shared_referee.hxx \
	\
	ttcl_mulisp/run/interpreter.hxx \
	ttcl_mulisp/run/lisp_interpreter.hxx \
	\
	ttcl_mulisp/sexp/sexp.hxx \
	ttcl_mulisp/sexp/sexp_atom.hxx \
	ttcl_mulisp/sexp/sexp_bool.hxx \
	ttcl_mulisp/sexp/sexp_const_visitor.hxx \
	ttcl_mulisp/sexp/sexp_integer.hxx \
	ttcl_mulisp/sexp/sexp_native.hxx \
	ttcl_mulisp/sexp/sexp_null.hxx \
	ttcl_mulisp/sexp/sexp_number.hxx \
	ttcl_mulisp/sexp/sexp_pair.hxx \
	ttcl_mulisp/sexp/sexp_parser.hxx \
	ttcl_mulisp/sexp/sexp_procedure.hxx \
	ttcl_mulisp/sexp/sexp_real.hxx \
	ttcl_mulisp/sexp/sexp_string.hxx \
	ttcl_mulisp/sexp/sexp_symbol.hxx \
	ttcl_mulisp/sexp/sexp_visitor.hxx

BUILT_SOURCES = \
	ttcl/_c++11.hxx

DISTCLEANFILES = \
	ttcl/_c++11.hxx

# Local Variables:
# coding: utf-8
# End:
